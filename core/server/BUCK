load("//:queue-triage-version.properties", "QUEUE_TRIAGE_VERSION")

java_library(
    name = "server",
    srcs = glob(["src/main/java/**/*.java"]),
    resources = [
        'src/main/resources/application.yml',
        'src/main/resources/logback.xml',
    ],
    resources_root = 'src/main/resources',
    deps = [
        '//lib/activemq:activemq-client-with-dependencies',
        '//lib/apache-cxf:cxf-core',
        '//lib/apache-cxf:cxf-rt-rs-service-description-swagger',
        '//lib/apache-cxf:cxf-rt-transports-http-jetty',
        '//lib:apache-el',
        '//lib:asm',
        '//lib:asm-commons',
        '//lib:asm-tree',
        '//lib/dropwizard/metrics:metrics-servlet',
        '//lib/dropwizard/metrics:metrics-core',
        '//lib/jackson:jackson-jaxrs-json-provider',
        '//lib/javax:javax-annotation-api',
        '//lib/javax:javax-servlet-api',
        '//lib/jetty:jetty-server',
        '//lib/logback:logback-classic',
        '//lib/logback:logback-core',
        '//lib/mongo:mongodb-driver',
        '//lib/slf4j:jcl-over-slf4j',
        '//lib/slf4j:jul-to-slf4j',
        '//lib/slf4j:log4j-over-slf4j',
        '//lib/slf4j:slf4j-api',
        '//lib:snakeyaml',
        '//lib/spring:spring-boot-autoconfigure',
        '//lib/spring:spring-boot-with-dependencies',
        '//lib/spring:spring-jms',
        '//lib/spring:spring-tx',
        '//lib/spring:spring-web',
    ],
    exported_deps = [
        '//common/cxf:queue-triage-common-cxf',
        '//common/cxf-server:queue-triage-common-cxf-server',
        '//common/health:queue-triage-health',
        '//common/id:queue-triage-common-id',
        '//common/jackson:queue-triage-common-jackson-spring',
        "//common/metrics:queue-triage-common-metrics",
        '//common/swagger:queue-triage-common-swagger-cxf',
        '//core/activemq:queue-triage-core-activemq',
        '//core/client:queue-triage-core-client',
        '//core/dao:queue-triage-core-dao',
        '//core/dao-mongo:queue-triage-core-dao-mongo',
        '//core/domain:queue-triage-core-domain',
        '//core/jms:queue-triage-core-jms',
        '//core/message-classification:queue-triage-core-message-classification',
        '//core/message-classification:queue-triage-core-message-classification-server',
        '//core/resend:queue-triage-core-resend',
        '//core/search:queue-triage-core-search',
        '//core/search:queue-triage-core-search-mongo',
        '//core/search:queue-triage-core-search-mongo-spring',
        '//core/service:queue-triage-core-service',
    ],
    visibility = [
        "PUBLIC"
    ],
)

java_test(
    name = "test",
    srcs = glob(['src/test/java/**/*Test.java']),
    deps = [
        ':server',
        '//core/client-test-support:queue-triage-core-client-test-support',
        '//core/domain-test-support:queue-triage-core-domain-test-support',
        '//lib:commons-lang3',
        '//lib:guava',
        '//lib/javax:javax-servlet-api',
        '//lib/javax:javax-ws-rs-api',
        '//lib/slf4j:slf4j-api',
        '//lib/test:common',
    ],
)

java_binary(
    name = 'queue-triage-core-server',
    main_class = 'uk.gov.dwp.queue.triage.core.QueueTriageCoreApplication',
    deps = [
        ':server'
    ],
    blacklist = [
        '^(?!uk.gov.dwp.queue.triage.*|logback.xml|application.yml)',
    ]
)

genrule(
    name = "start-script",
    cmd  = "echo 'java -cp $(classpath :queue-triage-core-server) uk.gov.dwp.queue.triage.core.QueueTriageCoreApplication' > $OUT && chmod u+x $OUT",
    out  = "start-core.sh",
)

# buck build //core/server:generate-swagger-output
genrule(
    name = "generate-swagger-output",
    cmd  = "$(exe //lib/swagger:swagger-codegen-cli) generate -i http://localhost:9991/core/swagger.json -l html -o $OUT",
    out  = "swagger-output",
)