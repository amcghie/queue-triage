def rpm_build(
        name,
        package_name,
        rpm_prefix,
        version,
        app_home,
        bin = [],
        lib = []):

    fpm_cmd = [
        'mkdir $TMP/fpm',
    ]
    if lib:
        # Copy any files specified in the lib array (including expansion of classpath) to
        # $BUCK_OUT/gen/$BUILD_PATH/copy_libs/lib
        copy_libs_cmd = [
            '$(exe //tools:copy_libs)',
            '$OUT',
        ] + lib
        genrule(
            name = 'copy_libs',
            bash = ' '.join(copy_libs_cmd),
            out =  '.',
        )
        # Copy all the files now in:
        # $BUCK_OUT/gen/$BUILD_PATH/copy_libs/lib
        # to
        # $BUCK_OUT/gen/$BUILD_PATH/$NAME__tmp/fpm/lib
        fpm_cmd += ['cp -R $(location :copy_libs)/lib $TMP/fpm']

    if bin:
        fpm_cmd += ['mkdir -vp $TMP/fpm/bin']
        for file in bin:
            fpm_cmd += ['cp %s $TMP/fpm/bin' % file]

    fpm_cmd += [
        'fpm -C $TMP/fpm -s dir -t rpm -n %s -p $OUT --prefix %s -v %s --rpm-os LINUX --rpm-user root --rpm-group root --epoch 1 --architecture noarch .' % (package_name, app_home, version)
    ]
    genrule(
        name = name,
        bash = ' && '.join(fpm_cmd),
        out  = '%s-%s.rpm' % (rpm_prefix, version),
    )
